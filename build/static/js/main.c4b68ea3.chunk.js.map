{"version":3,"sources":["components/error/preview_error.png","components/header/index.js","components/header/header.js","services/swapi-service.js","components/error/index.js","components/error/error.js","components/loader/index.js","components/loader/loader.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/swapi-secvice-constext/index.js","components/row/index.js","components/row/row.js","components/item-list/index.js","components/item-list/item-list.js","components/hoc-helper/with-data.js","components/hoc-helper/with-context.js","components/sw-components/item-list.js","components/item-details/item-details.js","components/item-details/index.js","components/sw-components/people-detail.js","components/sw-components/planet-details.js","components/sw-components/starship-detail.js","components/page/people-page.js","components/page/planet-page.js","components/page/starship-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","react_router_dom","to","DataServer","imageMainUrl","getImagePeople","id","concat","_this","getImagePlanets","getImageStarships","getAllPeople","_callee","res","regenerator_default","wrap","_context","prev","next","getResource","sent","abrupt","results","map","_transformPerson","stop","getPerson","_callee2","person","_context2","getAllPlanets","_callee3","_context3","_transformPlanet","getPlanet","_callee4","planet","_context4","getAllStarships","_callee5","_context5","_transformStarship","getStarship","_callee6","starship","_context6","_extractId","item","url","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","eyeColor","fetch","ok","Error","status","json","body","src","image","alt","Spiner","RandomPlanet","swapiService","updatePlanet","Math","floor","random","then","setState","loading","catch","onError","state","error","time","this","props","setInterval","_this$state","spiner","components_loader","mainContent","random_planet_Content","err","components_error","Component","defaultProps","Content","_ref","rotatePeriod","Fragment","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","Row","left","right","ItemList","newData","onClickPeople","li","lable","children","key","onClick","withData","View","getData","_React$Component","_temp","_getPrototypeOf2","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","value","_this2","assign","withContext","Teg","mapMethodToProps","serviceProps","SwapiService","labelItems","fn","withName","PersonList","PlanetList","StarshipList","_ref2","RenderItem","PersonDetails","persone","updatePerson","prevProps","itemId","_this$props","data","_this3","_this$state$persone","imageURl","load","Children","child","cloneElement","components_item_details","item_details_RenderItem","withRouter","history","params","components_row","push","people_detail","planet_details","starship_detail","App","isLoggedIn","onLogin","components_header","components_random_planet","react_router","path","exact","render","component","PeoplePage","PlanetPage","StarshipPage","ReactDOM","components_app","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kWCEzBC,SCEA,WACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,WACJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAT,WACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,aAAT,YACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,eAAT,0CCTOC,8DAYjBC,aAAe,mDAEfC,eAAiB,SAACC,GAChB,SAAAC,OAAUC,EAAKJ,aAAf,gBAAAG,OAA0CD,EAA1C,cAEFG,gBAAkB,SAACH,GACjB,SAAAC,OAAUC,EAAKJ,aAAf,aAAAG,OAAuCD,EAAvC,cAEFI,kBAAoB,SAACJ,GACnB,SAAAC,OAAUC,EAAKJ,aAAf,eAAAG,OAAyCD,EAAzC,cAIDK,kCAAe,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAAhB,EAAAiB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMV,EAAKW,YAAL,YADN,cACNN,EADMG,EAAAI,KAAAJ,EAAAK,OAAA,SAELR,EAAIS,QAAQC,IAAIf,EAAKgB,mBAFhB,wBAAAR,EAAAS,SAAAb,WAKbc,gDAAY,SAAAC,EAAOrB,GAAP,IAAAsB,EAAA,OAAAd,EAAAhB,EAAAiB,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACUV,EAAKW,YAAL,WAAAZ,OAA4BD,EAA5B,MADV,cACLsB,EADKC,EAAAT,KAAAS,EAAAR,OAAA,SAEJb,EAAKgB,iBAAiBI,IAFlB,wBAAAC,EAAAJ,SAAAE,iEAKZG,mCAAgB,SAAAC,IAAA,IAAAlB,EAAA,OAAAC,EAAAhB,EAAAiB,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EACGV,EAAKW,YAAL,aADH,cACTN,EADSmB,EAAAZ,KAAAY,EAAAX,OAAA,SAERR,EAAIS,QAAQC,IAAIf,EAAKyB,mBAFb,wBAAAD,EAAAP,SAAAM,WAKhBG,gDAAY,SAAAC,EAAO7B,GAAP,IAAA8B,EAAA,OAAAtB,EAAAhB,EAAAiB,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACUV,EAAKW,YAAL,YAAAZ,OAA6BD,EAA7B,MADV,cACL8B,EADKC,EAAAjB,KAAAiB,EAAAhB,OAAA,SAEJb,EAAKyB,iBAAiBG,IAFlB,wBAAAC,EAAAZ,SAAAU,iEAKZG,qCAAkB,SAAAC,IAAA,IAAA1B,EAAA,OAAAC,EAAAhB,EAAAiB,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACCV,EAAKW,YAAL,eADD,cACXN,EADW2B,EAAApB,KAAAoB,EAAAnB,OAAA,SAEVR,EAAIS,QAAQC,IAAIf,EAAKiC,qBAFX,wBAAAD,EAAAf,SAAAc,WAKlBG,kDAAc,SAAAC,EAAOrC,GAAP,IAAAsC,EAAA,OAAA9B,EAAAhB,EAAAiB,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA3B,KAAA,EACWV,EAAKW,YAAL,cAAAZ,OAA+BD,EAA/B,MADX,cACPsC,EADOC,EAAAzB,KAAAyB,EAAAxB,OAAA,SAENb,EAAKiC,mBAAmBG,IAFlB,wBAAAC,EAAApB,SAAAkB,iEAKfG,WAAa,SAACC,GAEZ,OAAOA,EAAKC,IAAIC,MADC,iBACe,SAGlChB,iBAAmB,SAACG,GAClB,MAAO,CACL9B,GAAIE,EAAKsC,WAAWV,GACpBc,KAAMd,EAAOc,KACbC,WAAYf,EAAOe,WACnBC,eAAgBhB,EAAOiB,gBACvBC,SAAUlB,EAAOkB,gBAIrBb,mBAAqB,SAACG,GACpB,MAAO,CACLtC,GAAIE,EAAKsC,WAAWF,GACpBM,KAAMN,EAASM,KACfK,MAAOX,EAASW,MAChBC,aAAcZ,EAASY,aACvBC,cAAeb,EAASa,cACxBC,OAAQd,EAASc,OACjBC,KAAMf,EAASe,KACfC,WAAYhB,EAASgB,WACrBC,cAAejB,EAASiB,qBAI5BrC,iBAAmB,SAACI,GAClB,MAAO,CACLtB,GAAIE,EAAKsC,WAAWlB,GACpBsB,KAAMtB,EAAOsB,KACbY,OAAQlC,EAAOkC,OACfC,UAAWnC,EAAOmC,UAClBC,SAAUpC,EAAOoC,2GAxFJhB,iFACH,gCACGiB,MAAK,GAAA1D,OADR,wBACQA,OAAcyC,eAA/BnC,UACKqD,yBACD,IAAIC,MAAJ,SAAA5D,OAAmBM,EAAIuD,gCAEdvD,EAAIwD,qBAAjBC,2BACIA,oICTAH,ECCQ,WACnB,OACItE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKwE,IAAKC,IAAOC,IAAI,QAAQzE,UAAU,eAD3C,UCJO0E,eCEA,WACX,OACI7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,gBCDa4E,6MAchBC,aAAe,IAAIzE,IACpB0E,aAAe,WACb,IAAMvE,EAAKwE,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,EAC5CxE,EAAKoE,aAAa1C,UAAU5B,GAAI2E,KAAK,SAAC7C,GACpC5B,EAAK0E,SAAS,CACZ9C,OAAQA,EACR+C,SAAS,MAEVC,MACD5E,EAAK6E,YAGTC,MAAQ,CACNlD,OAAQ,GAER+C,SAAS,EACTI,OAAQ,KAGVF,QAAU,WACP7E,EAAK0E,SAAS,CACbK,OAAO,EACPJ,SAAS,wFA3BM,IACVK,EAAQC,KAAKC,MAAbF,KACPC,KAAKZ,eACLc,YAAYF,KAAKZ,aAAcW,oCA2BxB,IAAAI,EAC2BH,KAAKH,MAAhClD,EADAwD,EACAxD,OAAS+C,EADTS,EACST,QAASI,EADlBK,EACkBL,MACnBM,EAASV,EAAUtF,EAAAC,EAAAC,cAAC+F,EAAD,MAAY,KAC/BC,EAAgBZ,GAAWI,EAAwC,KAA/B1F,EAAAC,EAAAC,cAACiG,EAAD,CAAS5D,OAASA,IACtD6D,EAAMV,EAAQ1F,EAAAC,EAAAC,cAACmG,EAAD,MAAU,KAC5B,OACErG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACZ6F,EACAI,EACAF,UAhD6BI,aAArBxB,EACVyB,aAAe,CACpBZ,KAAM,KAuDZ,IAAMa,EAAU,SAAAC,GAAc,IAAZlE,EAAYkE,EAAZlE,OACT9B,EAAgD8B,EAAhD9B,GAAI4C,EAA4Cd,EAA5Cc,KAAMC,EAAsCf,EAAtCe,WAAYoD,EAA0BnE,EAA1BmE,aAAcjD,EAAYlB,EAAZkB,SACzC,OACEzD,EAAAC,EAAAC,cAACF,EAAAC,EAAM0G,SAAP,KACG3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeyE,IAAI,SACxBF,IAAG,uDAAAhE,OAAyDD,EAAzD,UACRT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKmD,GACLrD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,cACAH,EAAAC,EAAAC,cAAA,YAAOoD,IAETtD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,mBACAH,EAAAC,EAAAC,cAAA,YAAOwG,IAET1G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,YACAH,EAAAC,EAAAC,cAAA,YAAOuD,QCjFZqB,MCE2B8B,IAAMC,gBAD/BC,IAAVC,SACWC,IAAVC,SCDOC,ECEH,SAAAT,GAAkB,IAAhBU,EAAgBV,EAAhBU,KAAMC,EAAUX,EAAVW,MAChB,OACIpH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdgH,GAEDnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdiH,aCTEC,SCCE,SAACxB,GAAU,IACbyB,EAA2BzB,EAA3ByB,QAAUC,EAAiB1B,EAAjB0B,cAEXC,EAAKF,EAAQ5F,IAAI,SAACwB,GACpB,IAAMuE,EAAQ5B,EAAM6B,SAASxE,GAC7B,OACIlD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVwH,IAAKzE,EAAKzC,GACVmH,QAAS,kBAAML,EAAcrE,EAAKzC,MACrCgH,KAIT,OACIzH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBACTqH,KCOFK,EAvBE,SAACC,EAAMC,GACpB,gBAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAAvH,EAAAwH,OAAAC,EAAA,EAAAD,CAAAvC,KAAAqC,GAAA,QAAAI,EAAAC,UAAAzE,OAAA0E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAA9H,EAAAwH,OAAAO,EAAA,EAAAP,CAAAvC,MAAAsC,EAAAC,OAAAQ,EAAA,EAAAR,CAAAF,IAAAW,KAAAC,MAAAX,EAAA,CAAAtC,MAAAlF,OAAA6H,MAEI9C,MAAQ,CACJ6B,QAAU,MAHlB3G,EAAA,OAAAwH,OAAAW,EAAA,EAAAX,CAAAF,EAAAD,GAAAG,OAAAY,EAAA,EAAAZ,CAAAF,EAAA,EAAAN,IAAA,oBAAAqB,MAAA,WAMuB,IAAAC,EAAArD,KACfmC,IAAU3C,KAAK,SAACkC,GAAD,OAAa2B,EAAK5D,SAAS,CACtCiC,gBARZ,CAAAK,IAAA,SAAAqB,MAAA,WAYS,IACG1B,EAAY1B,KAAKH,MAAjB6B,QACR,OAAIA,EAGOtH,EAAAC,EAAAC,cAAC4H,EAADK,OAAAe,OAAA,GAAUtD,KAAKC,MAAf,CAAsByB,QAAWA,KAFjCtH,EAAAC,EAAAC,cAAC+F,EAAD,UAffgC,EAAA,CAAqBrB,IAAMN,YCgBhB6C,EAjBK,SAACC,EAAKC,GACtB,OAAO,SAACxD,GACJ,OACI7F,EAAAC,EAAAC,cAAC8G,EAAD,KAEQ,SAACjC,GACG,IAAMuE,EAAeD,EAAiBtE,GACtC,OACI/E,EAAAC,EAAAC,cAACkJ,EAADjB,OAAAe,OAAA,GAASrD,EAAWyD,QCL1CvE,EAAe,IAAIwE,EAErBzI,EAGAiE,EAHAjE,aACAmB,EAEA8C,EAFA9C,cACAQ,EACAsC,EADAtC,gBAGE+G,EAAa,SAACJ,EAAKK,GACrB,OAAO,SAAC5D,GACJ,OACI7F,EAAAC,EAAAC,cAACkJ,EAAQvD,EACJ4D,KAMXC,EAAW,SAAAjD,GAAY,IAAVpD,EAAUoD,EAAVpD,KACf,OACIrD,EAAAC,EAAAC,cAAA,YAAOmD,IAUTsG,EAAa9B,EAAS2B,EAAWnC,EAAUqC,GAAW5I,GACtD8I,EAAa/B,EAAS2B,EAAWnC,EAAUqC,GAAWzH,GACtD4H,EAAehC,EAAS2B,EAAWnC,EARhB,SAAAyC,GAAmB,IAAjBzG,EAAiByG,EAAjBzG,KAAMK,EAAWoG,EAAXpG,MAC7B,OACI1D,EAAAC,EAAAC,cAAA,YAAOmD,EAAP,IAAcK,EAAd,OAM8DjB,GChChEsH,SAAa,SAAAtD,GAA0B,IAAxBvD,EAAwBuD,EAAxBvD,KAAM8F,EAAkBvC,EAAlBuC,MAAOvB,EAAWhB,EAAXgB,MAChC,OAASzH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQsH,GACxBzH,EAAAC,EAAAC,cAAA,YAAOgD,EAAK8F,OCLTgB,6MDcbvE,MAAQ,CACNwE,QAAS,KACT3E,SAAS,sFAITM,KAAKsE,0DAGYC,GACdvE,KAAKC,MAAMuE,SAAWD,EAAUC,SACjCxE,KAAKsE,eACLtE,KAAKP,SAAS,CACZC,SAAS,4CAMD,IAAA2D,EAAArD,KAAAyE,EACWzE,KAAKC,MAArBuE,EADKC,EACLD,OAAQE,EADHD,EACGC,KACXF,GAGJE,EAAKF,GAAQhF,KAAK,SAAC6E,GACjBhB,EAAK5D,SAAS,CACZ4E,UACA3E,SAAQ,uCAIL,IAAAiF,EAAA3E,KACP,IAAIA,KAAKH,MAAMwE,QACT,OAAOjK,EAAAC,EAAAC,cAAA,iCAFN,IAAA6F,EAIgCH,KAAKH,MAJrC+E,EAAAzE,EAIAkE,QAAUxJ,EAJV+J,EAIU/J,GAAI4C,EAJdmH,EAIcnH,KAAOiC,EAJrBS,EAIqBT,QACrBmF,EAAY7E,KAAKC,MAAjB4E,SACDC,EAAOpF,EAAQtF,EAAAC,EAAAC,cAAC+F,EAAD,MACjBjG,EAAAC,EAAAC,cAACF,EAAAC,EAAM0G,SAAP,KACE3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfuE,IAAK+F,EAAShK,GAAKmE,IAAI,WAEzB5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAKmD,GACLrD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BAERyG,IAAM+D,SAASjJ,IAAIkE,KAAKC,MAAM6B,SAAU,SAACkD,GACvC,OAAOhE,IAAMiE,aAAaD,EAAO,CAAC1H,KAAKqH,EAAK9E,MAAMwE,eAOhE,OACEjK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACduK,UA1DkCpE,aEO1B6C,IAlBO,SAACtD,GACH,OACR7F,EAAAC,EAAAC,cAAC4K,EACOjF,EACJ7F,EAAAC,EAAAC,cAAC6K,EAAD,CAAYtD,MAAM,SAASuB,MAAM,WACjChJ,EAAAC,EAAAC,cAAC6K,EAAD,CAAYtD,MAAM,YAAYuB,MAAM,eAM3B,SAACjE,GACtB,MAAO,CACHuF,KAAOvF,EAAalD,UACpB4I,SAAW1F,EAAavE,kBCEjB2I,IAhBO,SAACtD,GACH,OACR7F,EAAAC,EAAAC,cAAC4K,EACWjF,EACR7F,EAAAC,EAAAC,cAAC6K,EAAD,CAAYtD,MAAM,aAAauB,MAAM,eACrChJ,EAAAC,EAAAC,cAAC6K,EAAD,CAAYtD,MAAM,WAAWuB,MAAM,eAKtB,SAACjE,GACtB,MAAO,CACHuF,KAAMvF,EAAa1C,UACnBoI,SAAU1F,EAAanE,mBCIpBuI,IAhBS,SAACtD,GACL,OACR7F,EAAAC,EAAAC,cAAC4K,EACGjF,EACA7F,EAAAC,EAAAC,cAAC6K,EAAD,CAAYtD,MAAM,QAAQuB,MAAM,UAChChJ,EAAAC,EAAAC,cAAC6K,EAAD,CAAYtD,MAAM,SAASuB,MAAM,aAKxB,SAACjE,GACtB,MAAO,CACHuF,KAAMvF,EAAalC,YACnB4H,SAAW1F,EAAalE,qBCJjBmK,cATI,SAAAvE,GAAsB,IAApBwE,EAAoBxE,EAApBwE,QACVxK,EAD8BgG,EAAXrD,MACP8H,OAAZzK,GACH,OACIT,EAAAC,EAAAC,cAACiL,EAAD,CACQhE,KAAMnH,EAAAC,EAAAC,cAACyJ,EAAD,CAAYpC,cAAe,SAAC9G,GAAD,OAAQwK,EAAQG,KAAK3K,MACtD2G,MAAOpH,EAAAC,EAAAC,cAACmL,EAAD,CAAejB,OAAQ3J,QCMnCuK,cAVG,SAAAvE,GAAsB,IAApBwE,EAAoBxE,EAApBwE,QACLxK,EADyBgG,EAAXrD,MACF8H,OAAZzK,GACP,OACIT,EAAAC,EAAAC,cAACiL,EAAD,CACQhE,KAAMnH,EAAAC,EAAAC,cAAC0J,EAAD,CAAYrC,cAAe,SAAC9G,GAAD,OAAQwK,EAAQG,KAAK3K,MACtD2G,MAAOpH,EAAAC,EAAAC,cAACoL,EAAD,CAAelB,OAAQ3J,QCGnCuK,cATM,SAAAvE,GAAwB,IAArBwE,EAAqBxE,EAArBwE,QACbxK,EADkCgG,EAAZrD,MACV8H,OAAZzK,GACP,OACIT,EAAAC,EAAAC,cAACiL,EAAD,CACQhE,KAAMnH,EAAAC,EAAAC,cAAC2J,EAAD,CAActC,cAAe,SAAC9G,GAAD,OAAQwK,EAAQG,KAAK3K,MACxD2G,MAAOpH,EAAAC,EAAAC,cAACqL,EAAD,CAAiBnB,OAAQ3J,QCPjC+K,6MCSXzG,aAAe,IAAIwE,IAEnB9D,MAAQ,CACJgG,YAAY,KAGhBC,QAAS,WACL/K,EAAK0E,SAAS,CACVoG,YAAY,6EAMhB,OACAzL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4G,EAAD,CAAsBkC,MAAOpD,KAAKb,cAClC/E,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACyL,EAAD,MACA3L,EAAAC,EAAAC,cAAC0L,EAAD,MACI5L,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,KACQ7L,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,CAAOC,KAAK,IACJC,OAAK,EACLC,OAAQ,kBAAMhM,EAAAC,EAAAC,cAAA,kCACtBF,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,CAAOC,KAAK,eAAgBG,UAAWC,IACvClM,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,CAAOC,KAAK,gBAAgBG,UAAWE,IACvCnM,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,OAAK,EAACE,UAAWG,IAEnDpM,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,CAAUxL,GAAG,iBA7BJuG,IAAMN,WCNvC+F,IAASL,OAAOhM,EAAAC,EAAAC,cAACoM,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c4b68ea3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preview_error.500dce70.png\";","import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header d-flex\">\r\n        <h3><Link to=\"/\">StarDB</Link></h3>\r\n        <ul className=\"d-flex\">\r\n          <li><Link to=\"/people/\">People</Link></li>\r\n          <li><Link to=\"/planets/\">Planets</Link></li>\r\n          <li><Link to=\"/starships/\">Starships</Link></li>\r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Header;","\r\n\r\nexport default class DataServer {\r\n\r\n    async getResource (url){\r\n    const mainUrl = 'https://swapi.co/api';\r\n    const  res = await fetch(`${mainUrl}${url}`);\r\n        if(!res.ok){\r\n        throw  new Error(`Error ${res.status}`)\r\n        }\r\n    const  body = await res.json();\r\n        return body\r\n    }\r\n\r\n    imageMainUrl = 'https://starwars-visualguide.com/assets/img';\r\n\r\n    getImagePeople = (id) => {\r\n      return `${this.imageMainUrl}/characters/${id}.jpg`\r\n    }\r\n    getImagePlanets = (id) => {\r\n      return `${this.imageMainUrl}/planets/${id}.jpg`\r\n    }\r\n    getImageStarships = (id) => {\r\n      return `${this.imageMainUrl}/starships/${id}.jpg`\r\n    }\r\n\r\n\r\n     getAllPeople = async () => {\r\n        const res = await this.getResource(`/people/`);\r\n        return res.results.map(this._transformPerson);\r\n      }\r\n    \r\n       getPerson = async (id) => {\r\n        const person = await this.getResource(`/people/${id}/`);\r\n        return this._transformPerson(person);\r\n      }\r\n    \r\n       getAllPlanets = async () => {\r\n        const res = await this.getResource(`/planets/`);\r\n        return res.results.map(this._transformPlanet);\r\n      }\r\n    \r\n       getPlanet = async (id) => {\r\n        const planet = await this.getResource(`/planets/${id}/`);\r\n        return this._transformPlanet(planet);\r\n      }\r\n    \r\n       getAllStarships = async () => {\r\n        const res = await this.getResource(`/starships/`);\r\n        return res.results.map(this._transformStarship);\r\n      }\r\n    \r\n       getStarship = async (id) => {\r\n        const starship =  await this.getResource(`/starships/${id}/`);\r\n        return this._transformStarship(starship);\r\n      }\r\n    \r\n      _extractId = (item) => {\r\n        const idRegExp = /\\/([0-9]*)\\/$/;\r\n        return item.url.match(idRegExp)[1];\r\n      }\r\n    \r\n      _transformPlanet = (planet) => {\r\n        return {\r\n          id: this._extractId(planet),\r\n          name: planet.name,\r\n          population: planet.population,\r\n          rotationPeriod: planet.rotation_period,\r\n          diameter: planet.diameter\r\n        };\r\n      }\r\n    \r\n      _transformStarship = (starship) => {\r\n        return {\r\n          id: this._extractId(starship),\r\n          name: starship.name,\r\n          model: starship.model,\r\n          manufacturer: starship.manufacturer,\r\n          costInCredits: starship.costInCredits,\r\n          length: starship.length,\r\n          crew: starship.crew,\r\n          passengers: starship.passengers,\r\n          cargoCapacity: starship.cargoCapacity\r\n        }\r\n      }\r\n    \r\n      _transformPerson = (person) => {\r\n        return {\r\n          id: this._extractId(person),\r\n          name: person.name,\r\n          gender: person.gender,\r\n          birthYear: person.birthYear,\r\n          eyeColor: person.eyeColor\r\n        }\r\n      }\r\n}","import Error from './error';\r\n\r\nexport default Error;","import React from 'react';\r\nimport './error.css';\r\nimport image from  './preview_error.png';\r\nconst errorMassenger = () => {\r\n    return (\r\n        <div className=\"error\">\r\n            <img src={image} alt=\"error\" className=\"errorImage\"/>\r\n            error\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default errorMassenger;","import Spiner from './loader';\r\nexport default Spiner;\r\n","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst Spiner = () => {\r\n    return (\r\n        <div className=\"lds-css ng-scope\">\r\n        <div className=\"lds-eclipse\">\r\n        <div></div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spiner;","import  React, {Component} from 'react';\r\nimport DataServer from '../../services/swapi-service';\r\nimport Error from '../error/';\r\nimport './random-planet.css';\r\nimport Spiner from '../loader';\r\nimport PropTypes from 'prop-types';\r\nexport default class RandomPlanet extends Component {\r\n    static defaultProps = {\r\n      time: 10000\r\n    }\r\n\r\n    static propTypes = {\r\n      time: PropTypes.number\r\n    }\r\n\r\n    componentDidMount(){\r\n      const {time} = this.props;\r\n      this.updatePlanet()\r\n      setInterval(this.updatePlanet, time);\r\n    }\r\n     swapiService = new DataServer();\r\n    updatePlanet = () =>{\r\n      const id = Math.floor(Math.random() * 15) + 2;\r\n      this.swapiService.getPlanet(id).then((planet) => {\r\n        this.setState({\r\n          planet: planet,\r\n          loading: false\r\n        })\r\n      }).catch(\r\n        this.onError)\r\n    }\r\n\r\n    state = {\r\n      planet: {\r\n      },\r\n      loading: true,\r\n      error : false\r\n    }\r\n\r\n    onError = () => {\r\n       this.setState({\r\n        error: true,\r\n        loading: false\r\n      })\r\n    }\r\n    render() {\r\n      const {planet , loading, error} = this.state;\r\n      const spiner = loading ? <Spiner/> : null;\r\n      const mainContent = !(loading || error) ? <Content planet ={planet} /> : null;\r\n      const err = error ? <Error/>: null;\r\n        return (\r\n          <div className=\"random-planet jumbotron rounded\">\r\n            {spiner}\r\n            {err}\r\n            {mainContent}\r\n          </div>\r\n    \r\n        )\r\n      }\r\n\r\n   \r\n}\r\n\r\nconst Content = ({planet}) => {\r\n  const {id, name, population, rotatePeriod, diameter} = planet;\r\n    return (\r\n      <React.Fragment>\r\n         <img className=\"planet-image\" alt=\"planet\"\r\n                   src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\r\n              <div>\r\n                <h4>{name}</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                  <li className=\"list-group-item\">\r\n                    <span className=\"term\">Population</span>\r\n                    <span>{population}</span>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <span className=\"term\">Rotation Period</span>\r\n                    <span>{rotatePeriod}</span>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <span className=\"term\">Diameter</span>\r\n                    <span>{diameter}</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n      </React.Fragment>\r\n    )\r\n  }","import RandomPlanet from './random-planet';\r\nexport default RandomPlanet;","import React from 'react';\r\n\r\nconst {Provider: SwapiServiceProvider,\r\n        Consumer: SwapiServiceConsumer} = React.createContext();\r\n\r\n        export {\r\n            SwapiServiceConsumer,\r\n            SwapiServiceProvider\r\n        }","import Row from './row';\r\n\r\nexport default Row;","import React from 'react';\r\n\r\n\r\n\r\nconst Row = ({left, right}) =>{\r\n    return (\r\n        <div className=\"row mb2\">\r\n            <div className=\"col-md-6\">\r\n            {left}\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n            {right}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;","import ItemList from './item-list';\r\n\r\nexport default ItemList;","import React from 'react';\r\nimport './item-list.css';\r\n\r\nconst ItemList = (props) => {\r\n        const {newData , onClickPeople} = props;\r\n\r\n        const li = newData.map((item) => {\r\n            const lable = props.children(item);\r\n            return (\r\n                <li className=\"list-group-item\"\r\n                    key={item.id}\r\n                    onClick={() => onClickPeople(item.id)}>\r\n                {lable}\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul className=\"item-list list-group\">\r\n                {li}\r\n            </ul>\r\n        );\r\n}\r\n\r\nexport default ItemList;","import React from 'react';\r\nimport Loader from '../loader/'\r\nconst withData = (View, getData) => {\r\n    return class extends React.Component {\r\n\r\n        state = {\r\n            newData : null\r\n        }\r\n    \r\n        componentDidMount(){\r\n            getData().then((newData) => this.setState({\r\n                newData\r\n            }))\r\n        }\r\n\r\n    render() {\r\n        const { newData } = this.state;\r\n        if(!newData){\r\n            return <Loader />\r\n        }\r\n            return <View {...this.props} newData = {newData}/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withData;","import React from 'react';\r\nimport {SwapiServiceConsumer} from '../swapi-secvice-constext';\r\nconst withContext = (Teg, mapMethodToProps) => {\r\n    return (props) => {\r\n        return (\r\n            <SwapiServiceConsumer >\r\n                {\r\n                    (swapiService) => {\r\n                        const serviceProps = mapMethodToProps(swapiService)\r\n                        return (\r\n                            <Teg {...props} {...serviceProps} />\r\n                        )\r\n                    }\r\n                }\r\n            </SwapiServiceConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withContext;","import React from 'react';\r\nimport ItemList from '../item-list';\r\nimport {withData} from '../hoc-helper';\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\nconst swapiService = new SwapiService();\r\nconst {\r\n    getAllPeople,\r\n    getAllPlanets,\r\n    getAllStarships\r\n} = swapiService;\r\n\r\nconst labelItems = (Teg, fn) => {\r\n    return (props) => {\r\n        return (\r\n            <Teg {...props}>\r\n                {fn}\r\n            </Teg>\r\n        )\r\n    }\r\n}\r\n\r\nconst withName = ({name}) => {\r\n    return (\r\n        <span>{name}</span>\r\n    )\r\n}\r\n\r\nconst withNameAndModel = ({name, model}) => {\r\n    return(\r\n        <span>{name}({model})</span>\r\n    )\r\n};\r\n\r\nconst PersonList = withData(labelItems(ItemList, withName), getAllPeople);\r\nconst PlanetList = withData(labelItems(ItemList, withName), getAllPlanets);\r\nconst StarshipList = withData(labelItems(ItemList, withNameAndModel), getAllStarships);\r\n\r\nexport {\r\n    PersonList,\r\n    PlanetList,\r\n    StarshipList\r\n}","import React, { Component } from 'react';\r\nimport './item-details.css';\r\nimport Loader from '../loader';\r\n\r\nconst RenderItem = ({item, value, lable}) => {\r\n  return  (<li className=\"list-group-item\">\r\n            <span className=\"term\">{lable}</span>\r\n            <span>{item[value]}</span>\r\n        </li>)\r\n }\r\n\r\n\r\nexport {RenderItem} ;\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n  state = {\r\n    persone: null,\r\n    loading: false\r\n  };\r\n  \r\n  componentDidMount(){\r\n    this.updatePerson();\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.itemId !== prevProps.itemId){\r\n      this.updatePerson();\r\n      this.setState({\r\n        loading: true\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  updatePerson(){\r\n    const {itemId, data} = this.props;\r\n    if(!itemId){\r\n      return;\r\n    }\r\n    data(itemId).then((persone) => {\r\n      this.setState({\r\n        persone,\r\n        loading:false })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.persone){\r\n          return <span>Selected a people</span>\r\n        }\r\n    const {persone: {id, name}, loading} = this.state;\r\n    const {imageURl} = this.props;\r\n      let load = loading?<Loader/>:(\r\n        <React.Fragment>\r\n          <img className=\"person-image\"\r\n          src={imageURl(id)} alt=\"person\"/>\r\n\r\n        <div className=\"card-body\">\r\n          <h4>{name}</h4>\r\n          <ul className=\"list-group list-group-flush\">\r\n              {\r\n                React.Children.map(this.props.children, (child) => {\r\n                  return React.cloneElement(child, {item:this.state.persone})\r\n                })\r\n              }\r\n          </ul>\r\n        </div>\r\n        </React.Fragment>\r\n      )\r\n    return (\r\n      <div className=\"person-details card\">\r\n      {load}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import PersonDetails , {RenderItem} from './item-details';\r\nexport {RenderItem};\r\nexport default PersonDetails;","import React from 'react';\r\nimport {withContext} from '../hoc-helper';\r\nimport ItemDetails , {RenderItem} from '../item-details';\r\nconst PersonDetails = (props) =>{\r\n                    return (\r\n            <ItemDetails\r\n                {...props}>\r\n                <RenderItem lable=\"Gender\" value=\"gender\"/>\r\n                <RenderItem lable=\"Eye Color\" value=\"eyeColor\"/>\r\n            </ItemDetails>\r\n                    )\r\n};\r\n\r\n\r\nconst mapMethodToProps = (swapiService) => {\r\n    return {\r\n        data : swapiService.getPerson,\r\n        imageURl : swapiService.getImagePeople\r\n    }\r\n}\r\n\r\nexport default withContext(PersonDetails, mapMethodToProps);","import React from 'react';\r\nimport ItemDetails , {RenderItem} from '../item-details';\r\nimport {withContext} from '../hoc-helper';\r\nconst PlanetDetails = (props) =>{\r\n                    return (\r\n            <ItemDetails\r\n                    {...props}>\r\n                <RenderItem lable=\"Population\" value=\"population\"/>\r\n                <RenderItem lable=\"Diameter\" value=\"diameter\"/>\r\n            </ItemDetails>\r\n                    )\r\n                }\r\n\r\n    const mapMethodToProps = (swapiService) => {\r\n        return {\r\n            data: swapiService.getPlanet,\r\n            imageURl: swapiService.getImagePlanets\r\n        }\r\n    }\r\nexport default withContext(PlanetDetails,mapMethodToProps);","import React from 'react';\r\nimport ItemDetails , {RenderItem} from '../item-details';\r\nimport {withContext} from '../hoc-helper';\r\n\r\nconst StarshipDetails = (props) =>{\r\n                    return (\r\n            <ItemDetails\r\n            {...props}>\r\n                <RenderItem lable=\"Model\" value=\"model\"/>\r\n                <RenderItem lable=\"Length\" value=\"length\"/>\r\n            </ItemDetails>\r\n                    )\r\n                }\r\n\r\nconst mapMethodToProps = (swapiService) => {\r\n    return {\r\n        data: swapiService.getStarship,\r\n        imageURl : swapiService.getImageStarships\r\n    }\r\n}\r\nexport default withContext(StarshipDetails,mapMethodToProps);","import React from 'react';\r\nimport Row from '../row';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {PersonDetails,PersonList} from '../sw-components';\r\nconst PeoplePage = ({history, match}) => {\r\n    const {id} = match.params;\r\n        return (\r\n            <Row\r\n                    left={<PersonList onClickPeople={(id) => history.push(id)}/>}\r\n                    right={<PersonDetails itemId={id}></PersonDetails>}/>\r\n        )\r\n}\r\n\r\nexport default withRouter(PeoplePage);","import React from 'react';\r\nimport Row from '../row';\r\nimport {PlanetDetails,PlanetList} from '../sw-components';\r\nimport {withRouter}  from 'react-router-dom';\r\n\r\nconst PlanetPage =({history, match}) => {\r\n        const {id} = match.params;\r\n        return (\r\n            <Row\r\n                    left={<PlanetList onClickPeople={(id) => history.push(id)}/>}\r\n                    right={<PlanetDetails itemId={id}></PlanetDetails>}/>\r\n        )\r\n    \r\n}\r\n\r\nexport default withRouter(PlanetPage);","import React from 'react';\r\nimport {StarshipList,StarshipDetails} from '../sw-components';\r\nimport Row from '../row'\r\nimport {withRouter}  from 'react-router-dom';\r\nconst StarshipPage = ({ history, match }) => {\r\n    const {id} = match.params;\r\n    return (\r\n        <Row\r\n                left={<StarshipList onClickPeople={(id) => history.push(id)}/>}\r\n                right={<StarshipDetails itemId={id}></StarshipDetails>}/>\r\n    )\r\n}\r\n\r\nexport default withRouter(StarshipPage);","import App from './app';\r\n \r\nexport default App;","import React from 'react';\r\nimport './app.css';\r\nimport Header from '../header';\r\nimport RandomPlanet from '../random-planet/';\r\nimport { SwapiServiceProvider } from '../swapi-secvice-constext'\r\nimport SwapiService from '../../services/swapi-service';\r\nimport {PeoplePage, PlanetPage, StarshipPage} from '../page'\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\r\n\r\n\r\nexport default class App extends React.Component  {\r\n    swapiService = new SwapiService();\r\n\r\n    state = {\r\n        isLoggedIn: false\r\n    };\r\n\r\n    onLogin =() => {\r\n        this.setState({\r\n            isLoggedIn: true\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n        <div>\r\n            <SwapiServiceProvider value={this.swapiService}>\r\n            <Router>\r\n                <Header />\r\n                <RandomPlanet/>\r\n                    <Switch>\r\n                            <Route path=\"/\"\r\n                                    exact \r\n                                    render={() => <h2>Welcome to StarDB</h2>}></Route>\r\n                            <Route path=\"/people/:id?\"  component={PeoplePage}/>\r\n                            <Route path=\"/planets/:id?\" component={PlanetPage}/>\r\n                            <Route path=\"/starships/:id?\" exact component={StarshipPage}/>\r\n                           \r\n                        <Redirect to=\"/\"/>\r\n                    </Switch>\r\n            </Router>\r\n            </SwapiServiceProvider>\r\n         </div>\r\n    )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}